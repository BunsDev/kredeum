/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { InterfacesIds, InterfacesIdsInterface } from "../InterfacesIds";

const _abi = [
  {
    inputs: [],
    name: "ids",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "interfacesIds",
        type: "bytes4[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a4f806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063e7657e1514610030575b600080fd5b61003861004e565b6040516100459190610999565b60405180910390f35b6060601067ffffffffffffffff81111561006b5761006a6109bb565b5b6040519080825280602002602001820160405280156100995781602001602082028036833780820191505090505b5090507f01ffc9a700000000000000000000000000000000000000000000000000000000816000815181106100d1576100d06109ea565b5b60200260200101907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250507f80ac58cd0000000000000000000000000000000000000000000000000000000081600181518110610152576101516109ea565b5b60200260200101907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250507f150b7a0200000000000000000000000000000000000000000000000000000000816002815181106101d3576101d26109ea565b5b60200260200101907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250507f5b5e139f0000000000000000000000000000000000000000000000000000000081600381518110610254576102536109ea565b5b60200260200101907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250507f780e9d6300000000000000000000000000000000000000000000000000000000816004815181106102d5576102d46109ea565b5b60200260200101907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250507fd9b67a260000000000000000000000000000000000000000000000000000000081600581518110610356576103556109ea565b5b60200260200101907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250507f4e2312e000000000000000000000000000000000000000000000000000000000816006815181106103d7576103d66109ea565b5b60200260200101907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250507f0e89341c0000000000000000000000000000000000000000000000000000000081600781518110610458576104576109ea565b5b60200260200101907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250507f4b68d43100000000000000000000000000000000000000000000000000000000816008815181106104d9576104d86109ea565b5b60200260200101907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250507feacabe14000000000000000000000000000000000000000000000000000000008160098151811061055a576105596109ea565b5b60200260200101907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250507fd94a1db20000000000000000000000000000000000000000000000000000000081600a815181106105db576105da6109ea565b5b60200260200101907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250507f9e4ad4800000000000000000000000000000000000000000000000000000000081600b8151811061065c5761065b6109ea565b5b60200260200101907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250507f9817bfbf0000000000000000000000000000000000000000000000000000000081600c815181106106dd576106dc6109ea565b5b60200260200101907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250507fc7808abe0000000000000000000000000000000000000000000000000000000081600d8151811061075e5761075d6109ea565b5b60200260200101907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250507f746183470000000000000000000000000000000000000000000000000000000081600e815181106107df576107de6109ea565b5b60200260200101907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250507f1d487cb20000000000000000000000000000000000000000000000000000000081600f815181106108605761085f6109ea565b5b60200260200101907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152505090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610910816108db565b82525050565b60006109228383610907565b60208301905092915050565b6000602082019050919050565b6000610946826108af565b61095081856108ba565b935061095b836108cb565b8060005b8381101561098c5781516109738882610916565b975061097e8361092e565b92505060018101905061095f565b5085935050505092915050565b600060208201905081810360008301526109b3818461093b565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220010eb5cc030ac94faf11e874d888fd70f78fb779a800fbb6c31615941ec36f8864736f6c63430008090033";

type InterfacesIdsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InterfacesIdsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InterfacesIds__factory extends ContractFactory {
  constructor(...args: InterfacesIdsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "InterfacesIds";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<InterfacesIds> {
    return super.deploy(overrides || {}) as Promise<InterfacesIds>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): InterfacesIds {
    return super.attach(address) as InterfacesIds;
  }
  connect(signer: Signer): InterfacesIds__factory {
    return super.connect(signer) as InterfacesIds__factory;
  }
  static readonly contractName: "InterfacesIds";
  public readonly contractName: "InterfacesIds";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InterfacesIdsInterface {
    return new utils.Interface(_abi) as InterfacesIdsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): InterfacesIds {
    return new Contract(address, _abi, signerOrProvider) as InterfacesIds;
  }
}
