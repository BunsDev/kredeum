{
  "address": "0x85ac62841c72674A526Bb4BEB3C8ef29695242c2",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contractProbe",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "template",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        }
      ],
      "name": "NewImplementation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "template",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        }
      ],
      "name": "NewTemplate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_implementation",
          "type": "address"
        }
      ],
      "name": "addImplementation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "implementations",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "implementationsCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_template",
          "type": "address"
        }
      ],
      "name": "setDefaultTemplate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "template",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "templates",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x96d0f6c9de33cf48b9f7a28c5207702a96c51aeae8ea381deb9d24b7a02a82c8",
  "receipt": {
    "to": null,
    "from": "0xeF538d65FfFb06F985D75BCC9B469A526368BB93",
    "contractAddress": "0x85ac62841c72674A526Bb4BEB3C8ef29695242c2",
    "transactionIndex": 0,
    "gasUsed": "480376",
    "logsBloom": "0x
    "blockHash": "0x7cbe27736607309c3fe3a44f33e7cc3a70092c765b172ccd5272bb4e3468517c",
    "transactionHash": "0x96d0f6c9de33cf48b9f7a28c5207702a96c51aeae8ea381deb9d24b7a02a82c8",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 2,
        "transactionHash": "0x96d0f6c9de33cf48b9f7a28c5207702a96c51aeae8ea381deb9d24b7a02a82c8",
        "address": "0x85ac62841c72674A526Bb4BEB3C8ef29695242c2",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000ef538d65fffb06f985d75bcc9b469a526368bb93"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x7cbe27736607309c3fe3a44f33e7cc3a70092c765b172ccd5272bb4e3468517c"
      }
    ],
    "blockNumber": 2,
    "cumulativeGasUsed": "480376",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xd91fdC4F5f9A062bd99f29facF8B4e7A86C9A1e5"
  ],
  "solcInputHash": "0a4ccaaeac061eed6f106d35b997b95f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractProbe\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"template\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"NewImplementation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"template\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"NewTemplate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"addImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"implementations\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementationsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_template\",\"type\":\"address\"}],\"name\":\"setDefaultTemplate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"template\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"templates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solidity/contracts/CloneFactory.sol\":\"CloneFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/Clones.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\\n * deploying minimal proxy contracts, also known as \\\"clones\\\".\\n *\\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\\n *\\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\\n * deterministic method.\\n *\\n * _Available since v3.4._\\n */\\nlibrary Clones {\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create opcode, which should never revert.\\n     */\\n    function clone(address implementation) internal returns (address instance) {\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n            instance := create(0, ptr, 0x37)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create failed\\\");\\n    }\\n\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\\n     * the clones cannot be deployed twice at the same address.\\n     */\\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n            instance := create2(0, ptr, 0x37, salt)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create2 failed\\\");\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(\\n        address implementation,\\n        bytes32 salt,\\n        address deployer\\n    ) internal pure returns (address predicted) {\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf3ff00000000000000000000000000000000)\\n            mstore(add(ptr, 0x38), shl(0x60, deployer))\\n            mstore(add(ptr, 0x4c), salt)\\n            mstore(add(ptr, 0x6c), keccak256(ptr, 0x37))\\n            predicted := keccak256(add(ptr, 0x37), 0x55)\\n        }\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(address implementation, bytes32 salt)\\n        internal\\n        view\\n        returns (address predicted)\\n    {\\n        return predictDeterministicAddress(implementation, salt, address(this));\\n    }\\n}\\n\",\"keccak256\":\"0xa3bbab77849522b73d8c6cd3d2ac54bef7580e4354484f35f4cabf55d3d2b3f9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"solidity/contracts/CloneFactory.sol\":{\"content\":\"contract Name {\\n\\n} // SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/proxy/Clones.sol\\\";\\nimport \\\"./interfaces/IContractProbe.sol\\\";\\n\\ncontract CloneFactory is Ownable {\\n  // implementations : template or clone\\n  address[] public implementations;\\n  address public template;\\n\\n  mapping(address => address) public templates;\\n\\n  address private contractProbe;\\n\\n  event NewImplementation(address implementation, address template, address creator);\\n  event NewTemplate(address template, address creator);\\n\\n  constructor(address _contractProbe) {\\n    contractProbe = _contractProbe;\\n  }\\n\\n  /*\\n   *  ADD Implementation onlyOwner\\n   *\\n   *  _implementation : Implementation address\\n   */\\n  function addImplementation(address _implementation) public onlyOwner {\\n    _addImplementation(_implementation);\\n  }\\n\\n  /*\\n   *  SET default Template to be Cloned\\n   *\\n   *  _template : Template address\\n   */\\n  function setDefaultTemplate(address _template) public onlyOwner {\\n    if (templates[_template] == address(0)) addImplementation(_template);\\n    require(templates[_template] == _template, \\\"Template is a Clone\\\");\\n\\n    template = _template;\\n\\n    emit NewTemplate(_template, msg.sender);\\n  }\\n\\n  /*\\n   *  Implementations count\\n   *\\n   *  returns : Number of implementation\\n   */\\n  function implementationsCount() public view returns (uint256 count) {\\n    return implementations.length;\\n  }\\n\\n  /*\\n   *  ADD Implementation internal\\n   *\\n   *  _implementation : Implementation address\\n   */\\n  function _addImplementation(address _implementation) internal {\\n    require(templates[_implementation] == address(0), \\\"Implementation already exists\\\");\\n\\n    (bool _isContract, address _template) = IContractProbe(contractProbe).probe(_implementation);\\n\\n    require(_isContract, \\\"Implementation is not a Contract\\\");\\n\\n    implementations.push(_implementation);\\n    templates[_implementation] = _template;\\n\\n    emit NewImplementation(_implementation, _template, msg.sender);\\n  }\\n\\n  /*\\n   *  Clone Template\\n   *\\n   *  returns : Clone Address\\n   */\\n  function _clone() internal virtual returns (address clone_) {\\n    require(template != address(0), \\\"Template doesn't exist\\\");\\n\\n    clone_ = Clones.clone(template);\\n    _addImplementation(clone_);\\n  }\\n}\\n\",\"keccak256\":\"0x541aaa0a6526ef352832e5cb7a7e6c0dd62dd7e4e9d3c7fe1bcafea02762a03f\",\"license\":\"MIT\"},\"solidity/contracts/interfaces/IContractProbe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\ninterface IContractProbe {\\n  function probe(address _address) external view returns (bool isContract, address forwardedTo);\\n}\\n\",\"keccak256\":\"0x9dda006140d37bf757a3a36e50ea5552ce383b86133cd4b288ab23f500d32d86\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516107be3803806107be83398101604081905261002f916100ad565b6100383361005d565b600480546001600160a01b0319166001600160a01b03929092169190911790556100db565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100be578081fd5b81516001600160a01b03811681146100d4578182fd5b9392505050565b6106d4806100ea6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b1461010e578063b98a47481461011f578063c17bae4f14610132578063c6e2a40014610143578063f2fde38b1461015657600080fd5b806320a99bd0146100985780636f2ddd93146100de578063715018a6146100f1578063845affc8146100fb575b600080fd5b6100c16100a63660046105dc565b6003602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6002546100c1906001600160a01b031681565b6100f9610169565b005b6100c161010936600461063c565b6101a8565b6000546001600160a01b03166100c1565b6100f961012d3660046105dc565b6101d2565b6001546040519081526020016100d5565b6100f96101513660046105dc565b6102dd565b6100f96101643660046105dc565b610313565b6000546001600160a01b0316331461019c5760405162461bcd60e51b815260040161019390610654565b60405180910390fd5b6101a660006103a7565b565b600181815481106101b857600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b031633146101fc5760405162461bcd60e51b815260040161019390610654565b6001600160a01b038181166000908152600360205260409020541661022457610224816102dd565b6001600160a01b03808216600081815260036020526040902054909116146102845760405162461bcd60e51b815260206004820152601360248201527254656d706c617465206973206120436c6f6e6560681b6044820152606401610193565b600280546001600160a01b0319166001600160a01b038316908117909155604080519182523360208301527f81bbf04250a28f0d5979a401ffb6705dcebf8b354060431d672cf1ea4594fc67910160405180910390a150565b6000546001600160a01b031633146103075760405162461bcd60e51b815260040161019390610654565b610310816103f7565b50565b6000546001600160a01b0316331461033d5760405162461bcd60e51b815260040161019390610654565b6001600160a01b0381166103a25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610193565b610310815b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03818116600090815260036020526040902054161561045f5760405162461bcd60e51b815260206004820152601d60248201527f496d706c656d656e746174696f6e20616c7265616479206578697374730000006044820152606401610193565b6004805460405163275e5da560e01b81526001600160a01b03848116938201939093526000928392169063275e5da590602401604080518083038186803b1580156104a957600080fd5b505afa1580156104bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e191906105ff565b91509150816105325760405162461bcd60e51b815260206004820181905260248201527f496d706c656d656e746174696f6e206973206e6f74206120436f6e74726163746044820152606401610193565b600180548082019091557fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b038581166001600160a01b03199283168117909355600083815260036020908152604091829020805493871693909416831790935580519384529183015233908201527f053585d4de2374a5e4cee65e665171098bd6777e89041c2915cdac4d567cd93f9060600160405180910390a1505050565b6000602082840312156105ed578081fd5b81356105f881610689565b9392505050565b60008060408385031215610611578081fd5b82518015158114610620578182fd5b602084015190925061063181610689565b809150509250929050565b60006020828403121561064d578081fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6001600160a01b038116811461031057600080fdfea2646970667358221220474c99360c549fbfc63185b4f2666afebb43f91cee7f6bf01c8d8a83ba4026a764736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b1461010e578063b98a47481461011f578063c17bae4f14610132578063c6e2a40014610143578063f2fde38b1461015657600080fd5b806320a99bd0146100985780636f2ddd93146100de578063715018a6146100f1578063845affc8146100fb575b600080fd5b6100c16100a63660046105dc565b6003602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6002546100c1906001600160a01b031681565b6100f9610169565b005b6100c161010936600461063c565b6101a8565b6000546001600160a01b03166100c1565b6100f961012d3660046105dc565b6101d2565b6001546040519081526020016100d5565b6100f96101513660046105dc565b6102dd565b6100f96101643660046105dc565b610313565b6000546001600160a01b0316331461019c5760405162461bcd60e51b815260040161019390610654565b60405180910390fd5b6101a660006103a7565b565b600181815481106101b857600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b031633146101fc5760405162461bcd60e51b815260040161019390610654565b6001600160a01b038181166000908152600360205260409020541661022457610224816102dd565b6001600160a01b03808216600081815260036020526040902054909116146102845760405162461bcd60e51b815260206004820152601360248201527254656d706c617465206973206120436c6f6e6560681b6044820152606401610193565b600280546001600160a01b0319166001600160a01b038316908117909155604080519182523360208301527f81bbf04250a28f0d5979a401ffb6705dcebf8b354060431d672cf1ea4594fc67910160405180910390a150565b6000546001600160a01b031633146103075760405162461bcd60e51b815260040161019390610654565b610310816103f7565b50565b6000546001600160a01b0316331461033d5760405162461bcd60e51b815260040161019390610654565b6001600160a01b0381166103a25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610193565b610310815b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03818116600090815260036020526040902054161561045f5760405162461bcd60e51b815260206004820152601d60248201527f496d706c656d656e746174696f6e20616c7265616479206578697374730000006044820152606401610193565b6004805460405163275e5da560e01b81526001600160a01b03848116938201939093526000928392169063275e5da590602401604080518083038186803b1580156104a957600080fd5b505afa1580156104bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e191906105ff565b91509150816105325760405162461bcd60e51b815260206004820181905260248201527f496d706c656d656e746174696f6e206973206e6f74206120436f6e74726163746044820152606401610193565b600180548082019091557fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b038581166001600160a01b03199283168117909355600083815260036020908152604091829020805493871693909416831790935580519384529183015233908201527f053585d4de2374a5e4cee65e665171098bd6777e89041c2915cdac4d567cd93f9060600160405180910390a1505050565b6000602082840312156105ed578081fd5b81356105f881610689565b9392505050565b60008060408385031215610611578081fd5b82518015158114610620578182fd5b602084015190925061063181610689565b809150509250929050565b60006020828403121561064d578081fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6001600160a01b038116811461031057600080fdfea2646970667358221220474c99360c549fbfc63185b4f2666afebb43f91cee7f6bf01c8d8a83ba4026a764736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2362,
        "contract": "solidity/contracts/CloneFactory.sol:CloneFactory",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 2959,
        "contract": "solidity/contracts/CloneFactory.sol:CloneFactory",
        "label": "implementations",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 2961,
        "contract": "solidity/contracts/CloneFactory.sol:CloneFactory",
        "label": "template",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 2965,
        "contract": "solidity/contracts/CloneFactory.sol:CloneFactory",
        "label": "templates",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 2967,
        "contract": "solidity/contracts/CloneFactory.sol:CloneFactory",
        "label": "contractProbe",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      }
    }
  }
}