/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CloneFactory, CloneFactoryInterface } from "../CloneFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "contractProbe",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "template",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "NewImplementation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "template",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "NewTemplate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_implementation",
        type: "address",
      },
    ],
    name: "addImplementation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "implementations",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "implementationsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_template",
        type: "address",
      },
    ],
    name: "setDefaultTemplate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "template",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "templates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001161380380620011618339818101604052810190620000379190620001d5565b620000576200004b6200009f60201b60201c565b620000a760201b60201c565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000207565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200019d8262000170565b9050919050565b620001af8162000190565b8114620001bb57600080fd5b50565b600081519050620001cf81620001a4565b92915050565b600060208284031215620001ee57620001ed6200016b565b5b6000620001fe84828501620001be565b91505092915050565b610f4a80620002176000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b14610120578063b98a47481461013e578063c17bae4f1461015a578063c6e2a40014610178578063f2fde38b1461019457610093565b806320a99bd0146100985780636f2ddd93146100c8578063715018a6146100e6578063845affc8146100f0575b600080fd5b6100b260048036038101906100ad9190610b50565b6101b0565b6040516100bf9190610b8c565b60405180910390f35b6100d06101e3565b6040516100dd9190610b8c565b60405180910390f35b6100ee610209565b005b61010a60048036038101906101059190610bdd565b610291565b6040516101179190610b8c565b60405180910390f35b6101286102d0565b6040516101359190610b8c565b60405180910390f35b61015860048036038101906101539190610b50565b6102f9565b005b61016261057e565b60405161016f9190610c19565b60405180910390f35b610192600480360381019061018d9190610b50565b61058b565b005b6101ae60048036038101906101a99190610b50565b610613565b005b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61021161070b565b73ffffffffffffffffffffffffffffffffffffffff1661022f6102d0565b73ffffffffffffffffffffffffffffffffffffffff1614610285576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027c90610c91565b60405180910390fd5b61028f6000610713565b565b600181815481106102a157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61030161070b565b73ffffffffffffffffffffffffffffffffffffffff1661031f6102d0565b73ffffffffffffffffffffffffffffffffffffffff1614610375576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036c90610c91565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610413576104128161058b565b5b8073ffffffffffffffffffffffffffffffffffffffff16600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146104e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d790610cfd565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f81bbf04250a28f0d5979a401ffb6705dcebf8b354060431d672cf1ea4594fc6760405160405180910390a350565b6000600180549050905090565b61059361070b565b73ffffffffffffffffffffffffffffffffffffffff166105b16102d0565b73ffffffffffffffffffffffffffffffffffffffff1614610607576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fe90610c91565b60405180910390fd5b610610816107d7565b50565b61061b61070b565b73ffffffffffffffffffffffffffffffffffffffff166106396102d0565b73ffffffffffffffffffffffffffffffffffffffff161461068f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068690610c91565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f690610d8f565b60405180910390fd5b61070881610713565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff16600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089c90610dfb565b60405180910390fd5b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663275e5da5846040518263ffffffff1660e01b81526004016109039190610b8c565b604080518083038186803b15801561091a57600080fd5b505afa15801561092e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109529190610e68565b9150915081610996576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098d90610ef4565b60405180910390fd5b6001839080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f053585d4de2374a5e4cee65e665171098bd6777e89041c2915cdac4d567cd93f60405160405180910390a4505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b1d82610af2565b9050919050565b610b2d81610b12565b8114610b3857600080fd5b50565b600081359050610b4a81610b24565b92915050565b600060208284031215610b6657610b65610aed565b5b6000610b7484828501610b3b565b91505092915050565b610b8681610b12565b82525050565b6000602082019050610ba16000830184610b7d565b92915050565b6000819050919050565b610bba81610ba7565b8114610bc557600080fd5b50565b600081359050610bd781610bb1565b92915050565b600060208284031215610bf357610bf2610aed565b5b6000610c0184828501610bc8565b91505092915050565b610c1381610ba7565b82525050565b6000602082019050610c2e6000830184610c0a565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610c7b602083610c34565b9150610c8682610c45565b602082019050919050565b60006020820190508181036000830152610caa81610c6e565b9050919050565b7f54656d706c617465206973206120436c6f6e6500000000000000000000000000600082015250565b6000610ce7601383610c34565b9150610cf282610cb1565b602082019050919050565b60006020820190508181036000830152610d1681610cda565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610d79602683610c34565b9150610d8482610d1d565b604082019050919050565b60006020820190508181036000830152610da881610d6c565b9050919050565b7f496d706c656d656e746174696f6e20616c726561647920657869737473000000600082015250565b6000610de5601d83610c34565b9150610df082610daf565b602082019050919050565b60006020820190508181036000830152610e1481610dd8565b9050919050565b60008115159050919050565b610e3081610e1b565b8114610e3b57600080fd5b50565b600081519050610e4d81610e27565b92915050565b600081519050610e6281610b24565b92915050565b60008060408385031215610e7f57610e7e610aed565b5b6000610e8d85828601610e3e565b9250506020610e9e85828601610e53565b9150509250929050565b7f496d706c656d656e746174696f6e206973206e6f74206120436f6e7472616374600082015250565b6000610ede602083610c34565b9150610ee982610ea8565b602082019050919050565b60006020820190508181036000830152610f0d81610ed1565b905091905056fea2646970667358221220696528626229d4315a090c724e22e82dc68e6b1cd27c92294ed0aecdf5ce573564736f6c63430008090033";

type CloneFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CloneFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CloneFactory__factory extends ContractFactory {
  constructor(...args: CloneFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    contractProbe: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CloneFactory> {
    return super.deploy(
      contractProbe,
      overrides || {}
    ) as Promise<CloneFactory>;
  }
  getDeployTransaction(
    contractProbe: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(contractProbe, overrides || {});
  }
  attach(address: string): CloneFactory {
    return super.attach(address) as CloneFactory;
  }
  connect(signer: Signer): CloneFactory__factory {
    return super.connect(signer) as CloneFactory__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CloneFactoryInterface {
    return new utils.Interface(_abi) as CloneFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CloneFactory {
    return new Contract(address, _abi, signerOrProvider) as CloneFactory;
  }
}
